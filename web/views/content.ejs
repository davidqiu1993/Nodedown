<!DOCTYPE html>
<html>

<head>  
  <!-- Website Title -->
  <title><%= content %> - <%= user %> - Nodedown</title>
  <!-- Bootstrap Core CSS -->
  <link rel="stylesheet" href="/static/bootstrap/3.2.0/css/bootstrap.min.css">
  <!-- Bootstrap Docs CSS -->
  <link rel="stylesheet" href="/static/bootstrap/docs/css/docs.min.css">
  <!-- MathJax Style CSS and Bootstrap Docs CSS Conflict Correction -->
  <style type="text/css">
    .MathJax .mi, .MathJax .mo {
      color: #000;
    }
  </style>
  <!-- JQuery Core JavaScript -->
  <script src="/static/jquery/1.11.1/jquery.min.js"></script>
  <!-- Configurations for MathJax -->
  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$(',')$']]}});
  </script>
</head>

<body>
  
  <!-- Navigation Bar -->
  <div class="navbar navbar-inverse" role="navigation">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/">Nodedown</a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
          <li><a href="/">Home</a></li>
          <li><a href="/<%= user %>/"><%= user %></a></li>
          <li class="active"><a href="/<%= user %>/<%= content %>/"><%= content %></a></li>
        </ul>
      </div>
    </div>
  </div>
  
  <!-- Page Content -->
  <div class="container bs-docs-container">
    <div class="row">

      <!-- Content Main Field -->
      <div id="main" class="col-md-9" role="main">
        <!-- Markdown Content -->
        <%- mdcontent %>
        <!-- Attachment List -->
        <br/>
        <div id="attachment-box" class="panel panel-primary" style="display:none;">
          <div class="panel-heading">
            <div class="panel-title">Attachments</div>
          </div>
          <div class="panel-body">
            <ul>
              <% for (var attachment in attachments) { %>
              <script>$('#attachment-box').show();</script>
              <li><a href="<%= attachments[attachment] %>" target="_blank"><%= attachment %></a></li>
              <% } %>
            </ul>
          </div>
        </div>
      </div>
      
      <!-- Content Navigation Sidebar -->
      <div class="col-md-3">
        <div id='sidenav' class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix-top" role="complementary">
          <ul class="nav bs-docs-sidenav">
            <!-- AUTOMATIC GENERATION AREA -->
          </ul>
          <a class="back-to-top" href="#top">Back to top</a>
        </div>
      </div>

    </div>
  </div>

</body>

<!-- Display Features for Markdown Content -->
<script>
  // Attach Bootstrap header style to markdown contents
  $(document).ready(function() {
    $('h1,h2,h3,h4,h5,h6').addClass('page-header');
  });
  
  // Generate document navigation sidebar
  var hcount = new Array(undefined,0,0,0,0,0,0);
  var nodes = document.getElementById('main').childNodes;
  var curNode = document.getElementById('sidenav');
  var lastHeading = new Array(curNode);
  for (var i=1; i<7; ++i) lastHeading.push(undefined);
  function clearHCount(hcur) {
    switch (hcur) {
      case 1: hcount[2] = 0;
      case 2: hcount[3] = 0;
      case 3: hcount[4] = 0;
      case 4: hcount[5] = 0;
      case 5: hcount[6] = 0;
    }
  }
  function clearLastHeadings(hcur) {
    switch (hcur) {
      case 1: lastHeading[2] = undefined;
      case 2: lastHeading[3] = undefined;
      case 3: lastHeading[4] = undefined;
      case 4: lastHeading[5] = undefined;
      case 5: lastHeading[6] = undefined;
    }
  }
  function findNavGroupNode(parentNode) {
    var childs = parentNode.childNodes;
    for (var i=0; i<childs.length; ++i) {
      if (childs[i].nodeName.toUpperCase() == 'UL') return childs[i];
    }
    return undefined;
  }
  function findLowestAvailableHeading(hlevel) {
    while (!(lastHeading[hlevel-1] || (hlevel-1==0))) --hlevel;
    return lastHeading[hlevel-1];
  }
  function addNavItem(hlevel, id, name) {
    var parentNode = findLowestAvailableHeading(hlevel);
    var navGroup = findNavGroupNode(parentNode);
    if (!navGroup) {
      parentNode.appendChild(document.createElement('ul'));
      navGroup = parentNode.lastChild;
      navGroup.setAttribute('class','nav');
    }
    clearLastHeadings(hlevel);
    var cur = navGroup;
    cur.appendChild(document.createElement('li'));
    cur = cur.lastChild;
    lastHeading[hlevel] = cur;
    cur.appendChild(document.createElement('a'));
    cur = cur.lastChild;
    cur.setAttribute('href', '#' + id);
    cur.innerText = name;
  }
  for (var i=0; i<nodes.length; ++i) {
    switch (nodes[i].nodeName.toUpperCase()) {
      case 'H1':
        clearHCount(1);
        ++hcount[1];
        nodes[i].id = '' + hcount[1];
        addNavItem(1, nodes[i].id, nodes[i].innerText);
        break;

      case 'H2':
        clearHCount(2);
        ++hcount[2];
        nodes[i].id = '' + hcount[1] + '-' + hcount[2];
        addNavItem(2, nodes[i].id, nodes[i].innerText);
        break;

      case 'H3':
        clearHCount(3);
        ++hcount[3];
        nodes[i].id = '' + hcount[1] + '-' + hcount[2] + '-' + hcount[3];
        addNavItem(3, nodes[i].id, nodes[i].innerText);
        break;

      case 'H4':
        clearHCount(4);
        ++hcount[4];
        nodes[i].id = '' + hcount[1] + '-' + hcount[2] + '-' + hcount[3] + '-' + hcount[4];
        addNavItem(4, nodes[i].id, nodes[i].innerText);
        break;

      case 'H5':
        clearHCount(5);
        ++hcount[5];
        nodes[i].id = '' + hcount[1] + '-' + hcount[2] + '-' + hcount[3] + '-' + hcount[4] + '-' + hcount[5];
        addNavItem(5, nodes[i].id, nodes[i].innerText);
        break;

      case 'H6':
        clearHCount(6);
        ++hcount[6];
        nodes[i].id = '' + hcount[1] + '-' + hcount[2] + '-' + hcount[3] + '-' + hcount[4] + '-' + hcount[5] + '-' + hcount[6];
        addNavItem(6, nodes[i].id, nodes[i].innerText);
        break;
    }
  }
</script>
<!-- Bootstrap Core JavaScript -->
<script src="/static/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<!-- Bootstrap Docs JavaScript -->
<script src="/static/bootstrap/docs/js/docs.min.js"></script>
<!-- MathJax Core JavaScript -->
<script type="text/javascript" async src="/static/bower_components/MathJax/MathJax.js?config=TeX-MML-AM_CHTML"></script>

</html>
